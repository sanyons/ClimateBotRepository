@model TFPAW.ClimateBot.Web.Controllers.ChatRequest

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot del Clima</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chat-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
        }

        .chat-box {
            max-height: 400px;
            overflow-y: auto;
            padding: 10px;
            background-color: #ffffff;
            border-radius: 10px;
            margin-bottom: 10px;
            box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        .chat-bubble {
            padding: 10px 15px;
            border-radius: 20px;
            margin-bottom: 10px;
            display: inline-block;
            max-width: 80%;
        }

            .chat-bubble.user {
                background-color: #dcf8c6;
                align-self: flex-end;
                text-align: right;
            }

            .chat-bubble.bot {
                background-color: #eeeeee;
                align-self: flex-start;
            }
    </style>
</head>
<body>
    <div class="container mt-5 chat-container">
        <h4 class="text-center mb-4">Chatbot del Clima</h4>
        <div id="chatBox" class="chat-box d-flex flex-column">
            <!-- Aquí aparecerán las burbujas del chat -->
        </div>
        <form id="chatForm" class="d-flex">
            <input type="text" id="questionInput" class="form-control me-2" placeholder="Escribe tu mensaje...">
            <button type="submit" class="btn btn-primary">Enviar</button>
        </form>
    </div>

    <!-- Bootstrap 5 JS (Popper.js is included) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.getElementById('chatForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const questionInput = document.getElementById('questionInput');
            const question = questionInput.value;

            // Mostrar la pregunta del usuario en el chat
            addChatBubble(question, 'user');

            try {
                // Enviar la pregunta al servidor
                const response = await fetch('/Chatbot/Ask', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ question })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`); 
                }

                const data = await response.json();
                // Mostrar la respuesta del bot en el chat
                addChatBubble(data.response, 'bot');
            } catch (error) {
                console.error('Fetch error:', error);
                addChatBubble("Lo siento, hubo un problema al procesar tu solicitud. Por favor, intenta nuevamente.", 'bot');
            }

            // Limpiar el campo de entrada
            questionInput.value = '';
        });

        function addChatBubble(text, sender) {
            const chatBox = document.getElementById('chatBox');
            const bubble = document.createElement('div');
            bubble.classList.add('chat-bubble', sender);
            bubble.innerText = text;
            chatBox.appendChild(bubble);

            // Desplazarse hacia abajo en el chat
            chatBox.scrollTop = chatBox.scrollHeight;
        }
    </script>

</body>
</html>
